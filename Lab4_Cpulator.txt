OBJ 1: Perform Addition and Subtraction of two 32-bit numbers using data processing addressing mode (with immediate data)

.global _start
_start:
    mov r0, #0x40
    mov r1, #0x50
    add r2, r1, r0
    sub r3, r0, r1
    mul r4, r0, r1
MY_EXIT:
    B MY_EXIT


OBJ 2: Perform Addition, Subtraction, and Multiplication of two 32-bit numbers using load/store addressing mode.

.global _start
_start:
    LDR     R0, =0x10100000
    LDR     R1, [R0, #4]
    LDR     R2, [R0, #8]
    ADDS    R3, R1, R2
    STR     R3, [R0, #12]
    SUBS    R4, R1, R2
    STR     R4, [R0, #16]
    UMULL   R5, R6, R1, R2
    STR     R5, [R0, #20]
    STR     R6, [R0, #24]
_exit:
    B       _exit


OBJ 3: Perform the logical operations (AND, OR, XOR, and NOT) on two 32-bit numbers using load/store addressing mode.

.global _start
_start:
    LDR     R0, =0x10100000
    LDR     R1, [R0]
    LDR     R2, [R0, #4]
    AND     R3, R2, R1
    STR     R3, [R0, #8]
    ORR     R4, R1, R2
    STR     R4, [R0, #12]
    EOR     R5, R1, R2
    STR     R5, [R0, #16]
    MVN     R6, R1
    STR     R6, [R0, #20]
_exit:
    B       _exit
